{
  "intro": [
    ""
  ],
  "unary": [
    {
      "name": "太",
      "description": ["Absolute Value"],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "该",
      "description": [ "Decrement" ],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "当",
      "description": [ "Distinct characters/elements" ],
      "overloads": {

      }
    },
    {
      "name": "经",
      "description": [ "Double" ],
      "overloads": {
        "S": "Repeat the string twice",
        "L": "Vectorizes"
      }
    },
    {
      "name": "妈",
      "description": [ "Halve" ],
      "overloads": {
        "S": "Returns the first half of the string (rounded up)",
        "L": "Vectorizes"
      }
    },
    {
      "name": "用",
      "description": [ "Increment" ],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "打",
      "description": [
        "Convert to/from binary"
      ],
      "overloads": {
        "N": "Convert `a` to a binary string",
        "S": "Convert a binary string `a` to an integer",
        "L": "Convert an array of binary digits to an integer. Vectorizes."
      }
    },
    {
      "name": "地",
      "description": [ "Length of Number/String/List" ],
      "overloads": {

      }
    },
    {
      "name": "再",
      "description": [ "Logical NOT (0, \"\", and []) are falsy" ],
      "overloads": {
        "L": "Does NOT vectorize"
      }
    },
    {
      "name": "因",
      "description": [ "Negate" ],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "呢",
      "description": [
        "Factorial/Product"
      ],
      "overloads": {
        "N": "Factorial (a!)",
        "L": "Product of elements"
      }
    },
    {
      "name": "女",
      "description": [ "Reverse" ],
      "overloads": {
        "N": "Reverses digits",
        "S": "Reverses the string",
        "L": "Reverses the list"
      }
    },
    {
      "name": "告",
      "description": [ "Sign" ],
      "overloads": {
        "N": "x > 0 → 1, x < 0 → -1, x = 0 → 0",
        "L": "Vectorizes"
      }
    },
    {
      "name": "最",
      "description": ["Square"],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "手",
      "description": [ "Square Root" ],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "前",
      "description": [ "Subsections" ],
      "overloads": {
        "N": "Subsections of the range `[1..x]`"
      }
    },
    {
      "name": "找",
      "description": [
        "Convert to/from character codes"
      ],
      "overloads": {
        "N": "Convert from character code to character (e.g. 65 -> 'A')",
        "S": "Convert from character to character code, or list of codes if multiple characters ('A' -> 65, 'AB' -> [65, 66])",
        "L": "Vectorizes"
      }
    },
    {
      "name": "行",
      "description": [ "Convert to/from string/numbers" ],
      "overloads": {
        "N": "To string",
        "S": "To number",
        "L": "Vectorizes"
      }
    },
    {
      "name": "快",
      "description": [
        "Split/join on spaces"
      ],
      "overloads": {
        "S": "Split on spaces",
        "L": "Join on spaces"
      }
    },
    {
      "name": "而",
      "description": [
        "Split/Join on linefeeds"
      ],
      "overloads": {
        "S": "Split on linefeeds",
        "L": "Join with linefeeds"
      }
    },
    {
      "name": "死",
      "description": [ "Split/Join" ],
      "overloads": {
        "S": "Split into list of chars",
        "L": "Join list"
      }
    },
    {
      "name": "先",
      "description": [
        "Range"
      ],
      "overloads": {
        "N": "Range `[1..x]`",
        "S": "Range `[1..len(x)]`",
        "L": "Range `[1..len(x)]`"
      }
    },
    {
      "name": "像",
      "description": [ "Mod 2" ],
      "overloads": {
        "L": "Vectorizes"
      }
    },
    {
      "name": "等",
      "description": [ "First digit/character/element" ],
      "overloads": {

      }
    },
    {
      "name": "被",
      "description": [ "Last digit/character/element" ],
      "overloads": {

      }
    },
    {
      "name": "从",
      "description": [ "" ],
      "overloads": {

      }
    },
    {
      "name": "明",
      "description": [ "Execute previous expression, with caller as input" ],
      "overloads": {

      }
    },
    {
      "name": "中",
      "description": [ "Wrap (x -> [x])" ],
      "overloads": {

      }
    },
    {
      "name": "诉",
      "description": [ "Store into variable 间 and set as first autofill" ],
      "overloads": {

      }
    }
  ],
  "binary": [
    {
      "name": "样",
      "description": [ "Absolute Difference" ],
      "overloads": {

      },
      "tiers": [ "A", "a", "不" ]
    },
    {
      "name": "也",
      "description": [ "Addition" ],
      "overloads": {

      },
      "tiers": [ "B", "b", "们" ]
    },
    {
      "name": "和",
      "description": [ "" ],
      "overloads": {

      },
      "tiers": [ "C", "c", "这" ]
    },
    {
      "name": "下",
      "description": [ "Divides" ],
      "overloads": {

      },
      "tiers": [ "D", "d", "一" ]
    },
    {
      "name": "真",
      "description": [ "Division (floating point)" ],
      "overloads": {

      },
      "tiers": [ "E", "e", "他" ]
    },
    {
      "name": "现",
      "description": [ "Equals" ],
      "overloads": {

      },
      "tiers": [ "F", "f", "么" ]
    },
    {
      "name": "做",
      "description": [ "Every nth element" ],
      "overloads": {
        "N,N": "Every `y`th of `[1..x]`",
        "S,N": "Every `y`th character of `x`",
        "L,N": "Every `y`th character of `x`"
      },
      "tiers": [ "G", "g", "在" ]
    },
    {
      "name": "大",
      "description": [ "Exponentiation" ],
      "overloads": {

      },
      "tiers": [ "H", "h", "有" ]
    },
    {
      "name": "啊",
      "description": [ "Filter" ],
      "overloads": {
        "N,p": "Keep elements from `[1..x]` that satisfy predicate",
        "S,p": "Keep characters that satsify predicate",
        "L,p": "Keep elements that satisfy predicate"
      },
      "tiers": [ "I", "i", "个" ]
    },
    {
      "name": "怎",
      "description": [ "Greater than" ],
      "overloads": {

      },
      "tiers": [ "J", "j", "好" ]
    },
    {
      "name": "出",
      "description": [ "Inclusive Range" ],
      "overloads": {

      },
      "tiers": [ "K", "k", "来" ]
    },
    {
      "name": "点",
      "description": [ "Integer division" ],
      "overloads": {

      },
      "tiers": [ "L", "l", "人" ]
    },
    {
      "name": "起",
      "description": [ "Converts between integers and strings in a particular base/radix" ],
      "overloads": {
        "N,A": "Convert `x` to base `y`",
        "S/L,A": "Convert `x` from base `y`"
      },
      "tiers": [ "M", "m", "那" ]
    },
    {
      "name": "天",
      "description": [ "Less than" ],
      "overloads": {

      },
      "tiers": [ "N", "n", "要" ]
    },
    {
      "name": "把",
      "description": [ "Logical AND" ],
      "overloads": {
        "A,f": "If `x` is truthy, return the result of f. Otherwise, return a."
      },
      "tiers": [ "O", "o", "会" ]
    },
    {
      "name": "开",
      "description": [ "Logical OR" ],
      "overloads": {
        "A,f": "If `x` is falsy, return the result of `f`. Otherwise, return `a`."
      },
      "tiers": [ "P", "p", "就" ]
    },
    {
      "name": "让",
      "description": [ "Map" ],
      "overloads": {
        "N,f": "Map f over `[1..x]`",
        "S,f": "Map f over the characters of `x`",
        "L,f": "Map f over the elements of `x`"
      },
      "tiers": [ "Q", "q", "什" ]
    },
    {
      "name": "给",
      "description": [ "Max" ],
      "overloads": {
        "N,N": "Maximum of `x` and `y`",
        "S,f": "Maximal value of `f` over characters of `x`",
        "L,f": "Maximal value of `f` over elements of `x`"
      },
      "tiers": [ "R", "r", "没" ]
    },
    {
      "name": "但",
      "description": [ "Min" ],
      "overloads": {
        "N,N": "Minimum of `x` and `y`",
        "S,f": "Minimal value of `f` over characters of `x`",
        "L,f": "Minimal value of `f` over elements of `x`"
      },
      "tiers": [ "S", "s", "到" ]
    },
    {
      "name": "谢",
      "description": [ "Modulus" ],
      "overloads": {
        "N,N": "`x` mod `y`"
      },
      "tiers": [ "T", "t", "说" ]
    },
    {
      "name": "着",
      "description": [ "Multiplication / String repeat" ],
      "overloads": {
        "N,N": "Multiplication",
        "N,S": "Repeat `y` `x` times",
        "S,N": "Repeat `x` `y` times"
      },
      "tiers": [ "U", "u", "吗" ]
    },
    {
      "name": "只",
      "description": [ "Combinations" ],
      "overloads": {
        "N,N": "`x` choose `y`; Binomial coefficient",
        "S/L,N": "All combinations of `x` of length `y`",
        "N,S/L": "All combinations of `y` of length `x`"
      },
      "tiers": [ "V", "v", "为" ]
    },
    {
      "name": "些",
      "description": [ "Not equals" ],
      "overloads": {

      },
      "tiers": [ "W", "w", "想" ]
    },
    {
      "name": "如",
      "description": [ "Subtract" ],
      "overloads": {

      },
      "tiers": [ "X", "x", "能" ]
    },
    {
      "name": "家",
      "description": [ "Cartesian Product" ],
      "overloads": {
        "S/L,N": "`y`-ary Cartesian power",
        "N,S/L": "`x`-ary Cartesian power",
        "S/L,S/L": "`Cartesian product"
      },
      "tiers": [ "Y", "y", "上" ]
    },
    {
      "name": "后",
      "description": [ "Chunk" ],
      "overloads": {

      },
      "tiers": [ "Z", "z", "去" ]
    },
    {
      "name": "儿",
      "description": [ "Concatenate" ],
      "overloads": {
        "N/S,N/S": "Concatenate",
        "L,N/S": "Append",
        "N/S,L": "Prepend",
        "L,L": "Concatenate"
      },
      "tiers": [ "!", "^", "道" ]
    },
    {
      "name": "多",
      "description": [ "Count: # occurences" ],
      "overloads": {

      },
      "tiers": [ "#", "_", "她" ]
    },
    {
      "name": "意",
      "description": [ "Count: # elements that satisfy predicate" ],
      "overloads": {

      },
      "tiers": [ "$", "`", "很" ]
    },
    {
      "name": "别",
      "description": [ "Subsections of specified length" ],
      "overloads": {
        "N,N": "Subsections of [1..x] of `y` length",
        "S/L,N": "Subsections of `y` length"
      },
      "tiers": [ "%", "{", "看" ]
    },
    {
      "name": "所",
      "description": [ "Index of" ],
      "overloads": {

      },
      "tiers": [ "&", "|", "可" ]
    },
    {
      "name": "话",
      "description": [ "Indices of truthy elements / Map Range 0..x" ],
      "overloads": {
        "N,f": "Map `f` on [1..x]",
        "S/L,p": "Yield indices of elements that return truthy under `p`"
      },
      "tiers": [ "(", "~", "知" ]
    },
    {
      "name": "小",
      "description": [ "Any" ],
      "overloads": {
        "N,p": "Returns true if any of [1..x] satisfies `p`",
        "S/L,p": "Returns true if any element satisifes `p`"
      },
      "tiers": [ "*", "？", "得" ]
    },
    {
      "name": "自",
      "description": [ "Rotate right (negative rotates left)" ],
      "overloads": {
        "N,S/L": "Rotates `y` to the right `x` times",
        "S/L,N": "Rotates `x` to the right `y` times"
      },
      "tiers": [ "+", "、", "过" ]
    },
    {
      "name": "回",
      "description": [ "Skip" ],
      "overloads": {
        "N,S/L": "Skip first `x` elements of `y`",
        "S/L,N": "Skip first `y` elements of `x`"
      },
      "tiers": [ ",", "！", "吧" ]
    },
    {
      "name": "然",
      "description": [ "" ],
      "overloads": {
      },
      "tiers": [ "-", "￥", "还" ]
    },
    {
      "name": "果",
      "description": [ "Sort" ],
      "overloads": {
        "S/L,f": "Sort according to key function"
      },
      "tiers": [ "/", "…", "对" ]
    },
    {
      "name": "发",
      "description": [ "All" ],
      "overloads": {
        "N,p": "Returns true if any of [1..x] satisfies `p`",
        "S/L,p": "Returns true if any element satisifes `p`"
      },
      "tiers": [ ":", "（", "里" ]
    },
    {
      "name": "见",
      "description": [ "Take" ],
      "overloads": {
        "N,S/L": "Take first `x` elements of `y`",
        "S/L,N": "Take first `y` elements of `x`"
      },
      "tiers": [ ";", "—", "以" ]
    },
    {
      "name": "心",
      "description": [ "Reduce" ],
      "overloads": {

      },
      "tiers": [ "<", "你", "都" ]
    },
    {
      "name": "走",
      "description": [ "Pair: x,y -> [x,y]" ],
      "overloads": {

      },
      "tiers": [ "=", "我", "事" ]
    },
    {
      "name": "定",
      "description": [ "Element at" ],
      "overloads": {
        "N,S/L": "Return element at position `x`",
        "S/L,N": "Return element at position `y`"
      },
      "tiers": [ ">", "的", "子" ]
    },
    {
      "name": "听",
      "description": [ "Split/Join" ],
      "overloads": {
        "S,A": "Split `x` on `y`",
        "L,A": "Join `x` on `y`"
      },
      "tiers": [ "@", "是", "生" ]
    },
    {
      "name": "，样",
      "description": [ "Execute the nth expression, with caller as input" ],
      "overloads": {

      },
      "tiers": [ "，A", "，a", "，不" ]
    },
    {
      "name": "，也",
      "description": [ "Execute previous expression, with caller and argument as inputs" ],
      "overloads": {

      },
      "tiers": [ "，B", "，b", "，们" ]
    },
    {
      "name": "，和",
      "description": [ "Repeatedly execute previous expression until a condition is met" ],
      "overloads": {
        "A,p": "Repeatedly execute previous expression with `x` as initial input, until `p` is satisfied."
      },
      "tiers": [ "，C", "，c", "，这" ]
    },
    {
      "name": "，下",
      "description": [ "Repeatedly execute previous expression specified amount of times." ],
      "overloads": {
        "A,N": "Repeatedly execute previous expression with `x` as initial input `y` times, collecting intermediate results."
      },
      "tiers": [ "，D", "，d", "，一" ]
    }
  ]
}