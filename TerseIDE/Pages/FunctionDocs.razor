<!--inject HttpClient Http
@using System.Text.Json;
@foreach (var func in docs.unary) {
    <div class="func-header" @onclick="@(() => OnCodeCharClicked(func.Name[0].ToString()))">@func.name</div>
    <div>@func.description</div>
}
@foreach (var func in docs.binary) {
    <div class="func-header" @onclick="@(() => OnCodeCharClicked(func.Name[0].ToString()))">
        @func.name
        <span style="float:right">
            @foreach (var tChar in func.tiers) {
                <code @onclick="@(() => OnCodeCharClicked(tChar))" @onclick:stopPropagation="true">@tChar</code>
            }
        </span>
    </div>
    <div>@func.description</div>
}


@code {
    [Parameter]
    public Action<string> OnCodeCharClicked { get; set; }
    dynamic docs;
    protected async override Task OnInitializedAsync() {
        docs = await Http.GetFromJsonAsync<dynamic>("docs/page.json", new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }
}-->